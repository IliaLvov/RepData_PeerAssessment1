unzip("activity.zip")
install.package("lubridate")
install.packages("lubridate")
?read.table
?numeric
?transform
require(lubridate)
data <- read.csv("activity.zip",colClasses=c("numeric","character","factor"))
data <- transform(data, date = ymd(date))
require(lubridate)
data <- read.csv("activity.zip",)
View(data)
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("numeric","character","factor"))
data <- transform(data, date = ymd(date))
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","factor"))
data <- transform(data, date = ymd(date))
View(data)
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
data <- transform(data, date = ymd(date))
?split
?median
sapply
?sapply
?sum
split_per_day <- split(data, date)
sum_per_day <- sapply(split_per_day, sum(na.rm = TRUE))
split_per_day <- split(data, date)
sum_per_day <- sapply(split_per_day, sum)
split_per_day <- split(data, date)
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
split_per_day <- split(data, date)
split_per_day <- split(data, data$date)
sum_per_day <- sapply(split_per_day, sum(na.rm = TRUE))
sum_per_day <- sapply(split_per_day, sum)
steps_stplit_per_day <- split(data$steps, data$date)
?sum
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
data <- transform(data, date = ymd(date))
steps_per_day <- split(data$steps, data$date)
sum_per_day <- sapply(split_per_day, function {sum(na.rm = TRUE)})
?sappply
?sapply
sum_steps_per_day <- sapply(steps_per_day, function(x) {sum(x, na.rm = TRUE)})
sum_steps_per_day
dates <- unique(data$date)
dates
class(dates)
?plot
plot(dates,sum_steps_per_day,type="s")
hist(sum_steps_per_day)
?hist
hist(sum_steps_per_day, breaks = 9)
?hist
steps_per_day <- split(data$steps, data$date)
sum_steps_per_day <- sapply(steps_per_day, function(x) {sum(x, na.rm = TRUE)})
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", x_lab = "Summed steps per day (NAs ignored")
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored")
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
data <- transform(data, date = ymd(date))
steps_per_day <- split(data$steps, data$date)
sum_steps_per_day <- sapply(steps_per_day, function(x) {sum(x, na.rm = TRUE)})
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
```
---
title: 'Reproducible Research: Peer Assessment 1'
output:
html_document:
keep_md: yes
pdf_document: default
---
OS: Windows 8.1
R version: x64 3.1.2
R-studio version: 0.98
Required packages: core packages, lubridate
## Loading and preprocessing the data
This peace of code above reads data into R. It assumes that the relevant data file is presented in your working directory and is called "activity.zip".
``` {r Loading and preprocessing data}
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
data <- transform(data, date = ymd(date))
```
## What is mean total number of steps taken per day?
``` {r Plotting total number of steps per day}
steps_per_day <- split(data$steps, data$date)
sum_steps_per_day <- sapply(steps_per_day, function(x) {sum(x, na.rm = TRUE)})
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
```
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
---
title: 'Reproducible Research: Peer Assessment 1'
output:
html_document:
keep_md: yes
pdf_document: default
---
OS: Windows 8.1
R version: x64 3.1.2
R-studio version: 0.98
Required packages: core packages, lubridate
## Loading and preprocessing the data
This peace of code above reads data into R. It assumes that the relevant data file is presented in your working directory and is called "activity.zip".
``` {r Loading and preprocessing data}
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
data <- transform(data, date = ymd(date))
```
## What is mean total number of steps taken per day?
``` {r Plotting total number of steps per day}
steps_per_day <- split(data$steps, data$date)
sum_steps_per_day <- sapply(steps_per_day, function(x) {sum(x, na.rm = TRUE)})
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
```
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
hist(sum_steps_per_day)
library(knitr)
opts_chunk$set(cache=TRUE, cache.path = 'DocumentName_cache/', fig.path='figure/')
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(cache=FALSE)
?print
paste
?paste
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
data <- transform(data, date = ymd(date))
steps_per_day <- split(data$steps, data$date)
sum_steps_per_day <- sapply(steps_per_day, function(x) {sum(x, na.rm = TRUE)})
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
mean(sum_steps_per_day)
median(sum_steps_per_day)
View(data)
View(data)
View(data)
?plot
View(data)
name(max(mean_steps_per_interval))
names(max(mean_steps_per_interval))
steps_per_interval <- split(data$steps, data$interval)
mean_steps_per_interval <- sapply(steps_per_interval, function(x) {mean(x, na.rm = TRUE)})
intervals <- unique(data$interval)
plot(x = intervals, y = mean_steps_per_interval, type = "l", main = "Average daily activity", xlab = "Time in seconds", ylab = "Average number of steps")
max_interval <- name(max(mean_steps_per_interval))
names(max(mean_steps_per_interval))
names(mean_steps_per_interval[mean_steps_per_interval == max(mean_steps_per_interval)])
View(data)
View(data)
interval_names <- as.integer(names(steps_per_interval))
NAs <- sum(is.na(data$steps))
fillNAs <- function(data, steps) {
interval_names <- as.integer(names(steps))
for (i in 1:nrows(data)) {
if (is.na(data$steps[i])) {
data$steps[i] = steps[interval_names == data$interval[i]]
}
}
data
}
data_noNAs <- fillNAs(data, mean_steps_per_interval)
NAs <- sum(is.na(data$steps))
fillNAs <- function(data, steps) {
interval_names <- as.integer(names(steps))
for (i in 1:nrow(data)) {
if (is.na(data$steps[i])) {
data$steps[i] = steps[interval_names == data$interval[i]]
}
}
data
}
data_noNAs <- fillNAs(data, mean_steps_per_interval)
View(data_noNAs)
View(data)
NAs <- sum(is.na(data$steps))
fillNAs <- function(data, steps) {
interval_names <- as.integer(names(steps))
for (i in 1:nrow(data)) {
if (is.na(data$steps[i])) {
data$steps[i] = as.integer(steps[interval_names == data$interval[i]])
}
}
data
}
data_noNAs <- fillNAs(data, mean_steps_per_interval)
View(data_noNAs)
require(lubridate)
data <- read.csv("activity.csv",colClasses=c("integer","character","integer"))
data <- transform(data, date = ymd(date))
steps_per_day <- split(data$steps, data$date)
sum_steps_per_day <- sapply(steps_per_day, function(x) {sum(x, na.rm = TRUE)})
hist(sum_steps_per_day, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
daily_mean <- mean(sum_steps_per_day)
daily_median <- median(sum_steps_per_day)
steps_per_interval <- split(data$steps, data$interval)
mean_steps_per_interval <- sapply(steps_per_interval, function(x) {mean(x, na.rm = TRUE)})
intervals <- as.integer(names(mean_steps_per_interval))
plot(x = intervals, y = mean_steps_per_interval, type = "l", main = "Average daily activity", xlab = "Time in minutes", ylab = "Average number of steps")
named_max_steps <- mean_steps_per_interval[mean_steps_per_interval == max(mean_steps_per_interval)]
max_steps_interval <- as.integer(names(named_max_steps))
NAs <- sum(is.na(data$steps))
fillNAs <- function(data, steps) {
interval_names <- as.integer(names(steps))
for (i in 1:nrow(data)) {
if (is.na(data$steps[i])) {
data$steps[i] = as.integer(steps[interval_names == data$interval[i]])
}
}
data
}
data_noNAs <- fillNAs(data, mean_steps_per_interval)
steps_per_day_noNAs <- split(data_noNAs$steps, data_noNAs$date)
sum_steps_per_day_noNAs <- sapply(steps_per_day_noNAs, function(x) {sum(x, na.rm = TRUE)})
hist(sum_steps_per_day_noNAs, breaks = 9, main = "Histogram for summed steps per day", xlab = "Summed steps per day (NAs ignored)")
daily_mean_noNAs <- mean(sum_steps_per_day)
daily_mean_noNAs <- mean(sum_steps_per_day_noNAs)
daily_median_noNAs <- median(sum_steps_per_day_noNAs)
mean_change <- daily_mean_noNAs - daily_mean
median_change <- daily_median_noNAs - daily_median
